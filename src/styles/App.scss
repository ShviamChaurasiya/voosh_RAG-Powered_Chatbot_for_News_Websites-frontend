@use './variables';
@use 'sass:color';

// Global styles for the root container
#root {
  width: 100%; // Ensure it takes full width
  margin: 0; // Remove auto margins
  padding: 0; // Remove any padding
}

body {
  margin: 0;
  font-family: 'Poppins', sans-serif;
  color: #fff; // Default text color for the hero section
  overflow-x: hidden; // Prevent horizontal scroll
}

.app-wrapper {
  // This wrapper now contains the entire page, including the hero section and chatbot overlay
  position: relative;
  min-height: 100vh;
}

.hero-section {
  position: relative;
  width: 100%;
  min-height: 100vh; /* Full viewport height */
  display: flex;
  flex-direction: column; // Arrange children vertically
  align-items: center;
  justify-content: space-between; // Distribute space between header, content, and metrics
  text-align: center;
  padding: 0 20px 40px; // Add padding at the bottom for metrics section
  box-sizing: border-box;
  background-image: url('https://voosh.ai/static/media/heroBG.01ac84be4d13bfbd123d.webp'); /* Your provided BG image */
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

.waiting-content {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  p {
    font-size: 1.2rem;
    margin-bottom: 1rem;
  }

  .redirect-now-btn {
    background-color: variables.$primary-color;
    color: white;
    border: none;
    padding: 10px 20px;
    font-size: 1rem;
    cursor: pointer;
    border-radius: 5px;
    transition: background-color 0.3s ease;

    &:hover {
      background-color: color.adjust(variables.$primary-color, $lightness: -10%);
    }

    &:disabled {
      background-color: color.adjust(variables.$primary-color, $lightness: -20%);
      opacity: 0.6;
      cursor: not-allowed;
    }
  }
}

// Removed .overlay styles

.header { // This is the main site header
  // Removed position: absolute, top, left, width to make it a flex item
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 20px 50px;
  box-sizing: border-box;
  z-index: 10;
  width: 100%; // Ensure it takes full width within the flex container

  .logo {
    font-size: 28px;
    font-weight: 700;
    color: #fff;
    text-decoration: none;
  }

  nav ul {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    align-items: center;

    li {
      margin-left: 30px;
      position: relative;

      a {
        color: #fff;
        text-decoration: none;
        font-weight: 400;
        font-size: 16px;
        transition: color 0.3s ease;

        &:hover {
          color: variables.$soft-orange;
        }
      }
    }
  }

  .dropdown-content {
    display: none;
    position: absolute;
    background-color: rgba(variables.$dark-blue-gray, 0.95);
    min-width: 160px;
    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
    z-index: 1;
    padding: 10px 0;
    border-radius: 5px;
    top: 100%;
    left: 0;

    a {
      color: #fff;
      padding: 8px 15px;
      text-decoration: none;
      display: block;
      text-align: left;
      font-size: 14px;

      &:hover {
        background-color: #555;
      }
    }
  }

  .dropdown:hover .dropdown-content {
    display: block;
  }

  .buttons {
    display: flex; // Ensure buttons are side-by-side
    align-items: center;
  }

  .button {
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    font-weight: 600;
    cursor: pointer;
    text-decoration: none;
    transition: background-color 0.3s ease, color 0.3s ease;
    margin-left: 15px;
  }

  .partners-button {
    background-color: transparent;
    border: 1px solid variables.$soft-orange;
    color: variables.$soft-orange;

    &:hover {
      background-color: variables.$soft-orange;
      color: #fff;
    }
  }

  .demo-button {
    background-color: variables.$primary-color;
    color: #fff;

    &:hover {
  background-color: color.adjust(variables.$primary-color, $lightness: -10%);
}
  }
}

.hero-content {
  position: relative;
  z-index: 2;
  max-width: 900px;
  // Removed padding-top: 80px as header is no longer absolute

  .tag {
    font-size: 14px;
    background-color: rgba(255, 255, 255, 0.1);
    padding: 8px 15px;
    border-radius: 20px;
    margin-bottom: 20px;
    display: inline-block;
    color: #fff;
    border: 1px solid rgba(255, 255, 255, 0.3);
  }

  h1 {
    font-size: 60px;
    font-weight: 700;
    // margin-top: 20px; // Added margin-top as requested
    margin-bottom: 20px;
    line-height: 1.2;
    text-align: center; // Ensure text is centered

    span {
      // Target all direct span children of h1
      display: block; // Make them block elements to force new lines
      line-height: 1.2; // Inherit or set line-height for each line
      margin: 0; // Remove any default margins

      &.animated-text-line {
        color: variables.$soft-orange;
        min-width: 200px; // Ensure a minimum width to prevent shifting
        // Specific styling for the animated line if needed
        // You might want to adjust font-size or line-height specifically for this line
      }
    }
  }

  p {
    font-size: 20px;
    line-height: 1.6;
    margin-bottom: 40px;
    max-width: 700px;
    margin-left: auto;
    margin-right: auto;
    color: rgba(255, 255, 255, 0.8);
  }

  .cta-button {
    background-color: variables.$primary-color;
    color: #fff;
    padding: 15px 35px;
    border-radius: 8px;
    text-decoration: none;
    font-size: 20px;
    font-weight: 600;
    display: inline-flex;
    align-items: center;
    transition: background-color 0.3s ease;

    &:hover {
  background-color: color.adjust(variables.$primary-color, $lightness: -10%);
}c

    svg {
      margin-left: 10px;
    }
  }

  .small-text {
    margin-top: 20px;
    font-size: 14px;
    color: rgba(255, 255, 255, 0.6);

    span {
      margin: 0 10px;
    }
  }
}

.metrics-section {
  // Removed position: absolute, bottom, left, z-index
  width: 100%; // Ensure it takes full width within the flex container
  padding: 40px 50px;
  background-color: rgba(0, 0, 0, 0.6);
  // z-index: 3; // No longer needed as it's in flow
  display: flex;
  justify-content: space-around;
  flex-wrap: wrap;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  box-sizing: border-box;
  border-radius: 10px; // Added border-radius

  .metric-card {
    background-color: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 10px;
    padding: 25px;
    width: 30%;
    margin: 15px 0;
    text-align: left;
    box-sizing: border-box;
    backdrop-filter: blur(5px);

    h3 {
      font-size: 18px;
      font-weight: 600;
      margin-top: 0;
      margin-bottom: 10px;
      color: #fff;
    }

    .metric-value {
      font-size: 32px;
      font-weight: 700;
      color: variables.$soft-orange;
      display: flex;
      align-items: center;
      margin-bottom: 5px;

      .icon {
        margin-left: 10px;
        font-size: 24px;
        line-height: 1;
      }
    }

    .metric-description {
      font-size: 14px;
      color: rgba(255, 255, 255, 0.7);
    }
  }
}

// Media Queries for the main layout
@media (max-width: 1200px) {
  .hero-content h1 {
    font-size: 50px;
  }
  .hero-content p {
    font-size: 18px;
  }
  .header nav ul li {
    margin-left: 20px;
  }
  .metrics-section .metric-card {
    width: 45%;
  }
}

@media (max-width: 768px) {
  .header {
    flex-direction: column;
    padding: 15px 20px;

    nav ul {
      flex-wrap: wrap;
      justify-content: center;
      margin-top: 15px;
    }

    nav ul li {
      margin: 5px 10px;
    }

    .buttons {
      margin-top: 15px;
    }

    .dropdown-content {
      left: -20px;
    }
  }

  .hero-content h1 {
    font-size: 40px;
  }
  .hero-content p {
    font-size: 16px;
  }
  .hero-content .cta-button {
    padding: 12px 25px;
    font-size: 18px;
  }
  .metrics-section {
    flex-direction: column;
    align-items: center;
    padding: 20px;

    .metric-card {
      width: 90%;
    }
  }

  // Chatbot container for small screens
  .chatbot-container {
    flex-direction: column; // Stack vertically on small screens
    width: 95%;
    height: 95%;
  }

  .chat-main-content {
    width: 100%; // Take full width when stacked
  }
}

@media (max-width: 480px) {
  .hero-content h1 {
    font-size: 30px;
  }
  .hero-content p {
    font-size: 14px;
  }
  .header nav ul {
    display: none; /* Hide nav links on very small screens, could add a hamburger menu */
  }
  .header .buttons {
    margin-top: 10px;
  }
  .header .logo {
    font-size: 24px;
  }
}


// Chatbot Overlay (retained from previous version, adjusted for new context)
.chatbot-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.6); // Semi-transparent background
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1001; // Above the main content
}

.chatbot-container {
  display: flex;
  flex-direction: row; // Two columns for desktop
  width: 90%; // Take up most of the width
  max-width: 900px; // Increased max-width to accommodate sidebar
  height: 90%; // Take up most of the height
  max-height: 800px; // Max height for desktop
  background: rgba(variables.$dark-blue-gray, 0.95);
  border-radius: 10px;
  overflow: hidden;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);

  @media (max-width: 768px) {
    flex-direction: column; // Stack vertically on small screens
    width: 95%;
    height: 95%;
  }
}

.chat-main-content {
  display: flex;
  flex-direction: column;
  flex-grow: 1; // Take up remaining space
  width: calc(100% - 250px); // Adjust for sidebar width
  max-width: 650px; // Max width for the chat content itself
  height: 100%; // Take full height of container
  background: rgba(variables.$dark-blue-gray, 0.95); // Ensure background for chat content

  @media (max-width: 768px) {
    width: 100%; // Take full width when stacked
    max-width: 100%; // No max-width when stacked
    height: auto; // Adjust height automatically
  }
}

// Chatbot Header styles (from components/Header.jsx)
// This header is for the chatbot pop-up, not the main site header
.chatbot-container header { // Target the header inside the chatbot-container
  background: variables.$primary-color;
  color: white;
  padding: 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-shrink: 0;

  h1 {
    margin: 0;
    font-size: 1.5rem;

    @media (max-width: 480px) {
      font-size: 1.2rem;
    }
  }

  .header-actions {
    display: flex;
    gap: 0.5rem;
  }

  button {
    background: white;
    color: variables.$primary-color;
    border: none;
    padding: 0.5rem 1rem;
    cursor: pointer;
    border-radius: 5px;

    &.close-button {
      background: transparent;
      color: white;
      font-weight: bold;
      font-size: 1.2rem;
      padding: 0.2rem 0.6rem;
      border: 1px solid white;
      border-radius: 50%;
      line-height: 1;
      &:hover {
        background: rgba(255, 255, 255, 0.2);
      }
    }
  }
}

.chat-window {
  flex-grow: 1;
  overflow-y: auto;
  padding: 1rem;
  background: variables.$dark-blue-gray;
  display: flex;
  flex-direction: column;

  .message {
    margin-bottom: 0.75rem;
    padding: 0.6rem 1rem;
    border-radius: 18px;
    max-width: 75%;
    word-wrap: break-word;
    font-size: 0.95rem;

    @media (max-width: 480px) {
      max-width: 90%;
      font-size: 0.9rem;
    }
  }

  .user-message {
    background: variables.$user-bubble-color;
    color: white;
    align-self: flex-end;
    margin-left: auto;
    border-bottom-right-radius: 5px;
  }

  .bot-message {
    background: rgba(255, 255, 255, 0.1);
    color: white;
    align-self: flex-start;
    border-bottom-left-radius: 5px;
  }
}

form {
  display: flex;
  padding: 1rem;
  background: rgba(variables.$dark-blue-gray, 0.95);
  border-top: 1px solid #eee;
  flex-shrink: 0;

  input {
    flex-grow: 1;
    padding: 0.75rem;
    border: 1px solid rgba(255, 255, 255, 0.3); // Add a subtle background
    border-radius: 20px;
    margin-right: 0.5rem;
    font-size: 1rem;
    background-color: rgba(255, 255, 255, 0.1); // Add a subtle background
    color: white; // Ensure text is visible
  }

  button {
    background: variables.$primary-color;
    color: white;
    border: none;
    padding: 0.75rem 1.2rem;
    margin-left: 0.5rem;
    cursor: pointer;
    border-radius: 20px;
    font-size: 1rem;

    &:disabled {
      background: rgba(255, 255, 255, 0.2); // Darker disabled background
      color: rgba(255, 255, 255, 0.5); // Lighter disabled text
      cursor: not-allowed;
    }
  }

  @media (max-width: 480px) {
    flex-direction: column;
    padding: 0.75rem;

    input {
      margin-right: 0;
      margin-bottom: 0.5rem;
      width: 100%;
    }

    button {
      margin-left: 0;
      width: 100%;
    }
  }
}

.typing-indicator {
  padding: 0.75rem 1rem;
  font-style: italic;
  color: rgba(255, 255, 255, 0.7);
  background: variables.$dark-blue-gray;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  font-size: 0.85rem;
  flex-shrink: 0;
}
